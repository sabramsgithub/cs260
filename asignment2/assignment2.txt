Last semester I took a class in C. The final project for this class was to design a data structure, and the way we did this was by making a class of objects who would reference an object of the same class behind it and in front of it. In order to change the order in which the list appears, we would have to simply reference a new class. This is what a linked list is.
Using this, we can generate an attribute we'd like to list, let's say cars, for example. We could have a class that has informations one would like to know about cars, and then a modifier for what car comes next in the list. We could insert a new car at any point by making the class "behind" it in order reference it, and make it refernce the "next" car on the list.
The functions we would need to make this work would involve object creation, object insertion, changing the attribute of the previous object to link to the new object, and changing the added object to reference the next object in order. Naturally, to delete this, we would need to do the opposite, and simply have the previous object link to the object after our deleted example, and also to free up the memory the deleted object was taking up, if needed.
